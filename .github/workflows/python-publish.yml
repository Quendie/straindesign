# This workflow will upload a Python Package using Twine when a release is created

name: Build and Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build setuptools wheel twine anaconda-client conda-build
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        ANCONDA_USERNAME: ${{ secrets.ANACONDA_USERNAME }}
        ANACONDA_PASSWORD: ${{ secrets.ANACONDA_USERNAME }}
      run: |
        rm -rf dist
        rm -rf conda-bld
        python setup.py sdist bdist_wheel
        twine upload dist/*
        mkdir conda-bld
        conda-build conda-recipe/. -c conda-forge --croot conda-bld
        anaconda login --username ANCONDA_USERNAME --password ANACONDA_PASSWORD
        anaconda upload -u cnapy conda-bld/noarch/straindesign*
        rm -rf dist
        rm -rf conda-bld
